// <auto-generated />
using System;
using Datos.Contexto;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Datos.Migrations
{
    [DbContext(typeof(DbContextHd))]
    [Migration("20190213121457_delete-restrict-cascadas")]
    partial class deleterestrictcascadas
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Entidades.Modelo.Cia", b =>
                {
                    b.Property<int>("cia_id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("activa");

                    b.Property<bool>("bloqueada");

                    b.Property<int>("ciudad_id");

                    b.Property<string>("codigo_bd")
                        .IsRequired()
                        .HasMaxLength(12);

                    b.Property<int>("estado_id");

                    b.Property<DateTime?>("f_aplica_bloqueo");

                    b.Property<int>("grupo_cia_id");

                    b.Property<int>("lic_alquiler");

                    b.Property<int>("lic_vta");

                    b.Property<string>("marca")
                        .HasMaxLength(60);

                    b.Property<long>("marca_87_id");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<int>("pais_id");

                    b.Property<string>("rif")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<int>("soporte_id");

                    b.Property<long>("tipo_166_id");

                    b.Property<string>("version_app")
                        .IsRequired()
                        .HasMaxLength(8);

                    b.Property<string>("version_bd")
                        .IsRequired()
                        .HasMaxLength(8);

                    b.HasKey("cia_id");

                    b.HasIndex("ciudad_id");

                    b.HasIndex("estado_id");

                    b.HasIndex("grupo_cia_id");

                    b.HasIndex("marca_87_id");

                    b.HasIndex("nombre")
                        .IsUnique();

                    b.HasIndex("pais_id");

                    b.HasIndex("rif")
                        .IsUnique();

                    b.HasIndex("soporte_id");

                    b.HasIndex("tipo_166_id");

                    b.ToTable("cia");
                });

            modelBuilder.Entity("Entidades.Modelo.Ciudad", b =>
                {
                    b.Property<int>("ciudad_id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("activo");

                    b.Property<string>("codigo")
                        .HasMaxLength(6);

                    b.Property<int>("estado_id");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.HasKey("ciudad_id");

                    b.HasIndex("estado_id", "nombre")
                        .IsUnique();

                    b.ToTable("ciudad");
                });

            modelBuilder.Entity("Entidades.Modelo.ConsecutivoHd", b =>
                {
                    b.Property<int>("consecutivo_hd_id");

                    b.Property<int>("consecutivo");

                    b.HasKey("consecutivo_hd_id");

                    b.ToTable("consecutivo_hd");
                });

            modelBuilder.Entity("Entidades.Modelo.Dominio", b =>
                {
                    b.Property<int>("dominio_id");

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("dominio_id");

                    b.HasIndex("descripcion")
                        .IsUnique();

                    b.ToTable("dominio");
                });

            modelBuilder.Entity("Entidades.Modelo.DominioDet", b =>
                {
                    b.Property<long>("dominio_det_id");

                    b.Property<short>("codigo")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue((short)0);

                    b.Property<string>("descrip_corta")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<int>("dominio_id");

                    b.Property<int>("entero1");

                    b.Property<int>("entero2");

                    b.Property<int>("pais_id");

                    b.Property<int>("signo")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0);

                    b.HasKey("dominio_det_id");

                    b.HasIndex("pais_id");

                    b.HasIndex("dominio_id", "pais_id", "codigo")
                        .IsUnique();

                    b.HasIndex("dominio_id", "pais_id", "descripcion")
                        .IsUnique();

                    b.ToTable("dominio_det");
                });

            modelBuilder.Entity("Entidades.Modelo.Estado", b =>
                {
                    b.Property<int>("estado_id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("activo");

                    b.Property<string>("codigo")
                        .HasMaxLength(6);

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.Property<int>("pais_id");

                    b.HasKey("estado_id");

                    b.HasIndex("pais_id", "nombre")
                        .IsUnique();

                    b.ToTable("estado");
                });

            modelBuilder.Entity("Entidades.Modelo.GrupoCia", b =>
                {
                    b.Property<int>("grupo_cia_id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.HasKey("grupo_cia_id");

                    b.HasIndex("nombre")
                        .IsUnique();

                    b.ToTable("grupo_cia");
                });

            modelBuilder.Entity("Entidades.Modelo.HdArchivo", b =>
                {
                    b.Property<int>("hd_archivo_id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.Property<DateTime>("f_crea");

                    b.Property<int>("hd_doc_id");

                    b.Property<string>("nombrefile")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<int>("usuario_id");

                    b.HasKey("hd_archivo_id");

                    b.HasIndex("hd_doc_id");

                    b.HasIndex("usuario_id");

                    b.ToTable("hdarchivo");
                });

            modelBuilder.Entity("Entidades.Modelo.HdDoc", b =>
                {
                    b.Property<int>("hd_doc_id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("aplicacion_178_id");

                    b.Property<int>("cia_id");

                    b.Property<int>("consultor_id");

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("email_contacto")
                        .HasMaxLength(150);

                    b.Property<DateTime>("f_correcion");

                    b.Property<DateTime>("f_crea");

                    b.Property<DateTime>("f_solucion");

                    b.Property<bool>("leido_consultor");

                    b.Property<bool>("leido_programador");

                    b.Property<long>("modulo_214_id");

                    b.Property<long>("motivo_298_id");

                    b.Property<string>("nombre_contacto")
                        .HasMaxLength(120);

                    b.Property<string>("nombre_ventana")
                        .HasMaxLength(60);

                    b.Property<int>("numero");

                    b.Property<int>("pais_id");

                    b.Property<int>("persona_id");

                    b.Property<int>("programador_id");

                    b.Property<string>("solucion")
                        .HasColumnType("text");

                    b.Property<long>("status_175_id");

                    b.Property<long>("tipo_172_id");

                    b.Property<string>("titulo")
                        .IsRequired()
                        .HasMaxLength(120);

                    b.Property<string>("tlf_contacto")
                        .HasMaxLength(20);

                    b.Property<long>("urgencia_170_id");

                    b.Property<string>("version_app")
                        .HasMaxLength(12);

                    b.Property<string>("version_bd")
                        .HasMaxLength(12);

                    b.Property<string>("version_solucion")
                        .HasMaxLength(12);

                    b.HasKey("hd_doc_id");

                    b.HasIndex("aplicacion_178_id");

                    b.HasIndex("cia_id");

                    b.HasIndex("consultor_id");

                    b.HasIndex("modulo_214_id");

                    b.HasIndex("motivo_298_id");

                    b.HasIndex("pais_id");

                    b.HasIndex("programador_id");

                    b.HasIndex("status_175_id");

                    b.HasIndex("tipo_172_id");

                    b.HasIndex("urgencia_170_id");

                    b.ToTable("hddoc");
                });

            modelBuilder.Entity("Entidades.Modelo.HdSeguimiento", b =>
                {
                    b.Property<int>("hd_seguimiento_id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("f_crea");

                    b.Property<int>("hd_doc_id");

                    b.Property<string>("observaciones")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("status_175_id");

                    b.Property<int>("usuario_id");

                    b.HasKey("hd_seguimiento_id");

                    b.HasIndex("hd_doc_id");

                    b.HasIndex("status_175_id");

                    b.HasIndex("usuario_id");

                    b.ToTable("hdseguimiento");
                });

            modelBuilder.Entity("Entidades.Modelo.Municipio", b =>
                {
                    b.Property<int>("municipio_id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("codigo")
                        .HasMaxLength(6);

                    b.Property<int>("estado_id");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("referencia")
                        .HasMaxLength(6);

                    b.HasKey("municipio_id");

                    b.HasIndex("estado_id", "nombre")
                        .IsUnique();

                    b.ToTable("municipio");
                });

            modelBuilder.Entity("Entidades.Modelo.Pais", b =>
                {
                    b.Property<int>("pais_id");

                    b.Property<string>("cia")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<string>("continente")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("internet")
                        .IsRequired()
                        .HasMaxLength(4);

                    b.Property<string>("iso2")
                        .IsRequired()
                        .HasMaxLength(4);

                    b.Property<string>("iso3")
                        .IsRequired()
                        .HasMaxLength(4);

                    b.Property<string>("iso3166")
                        .IsRequired()
                        .HasMaxLength(4);

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.Property<string>("nombre_completo")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.Property<string>("telefono")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("vehiculo")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.HasKey("pais_id");

                    b.HasIndex("nombre")
                        .IsUnique();

                    b.ToTable("pais");
                });

            modelBuilder.Entity("Entidades.Modelo.Persona", b =>
                {
                    b.Property<int>("persona_id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("apellido1")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("apellido2")
                        .HasMaxLength(100);

                    b.Property<string>("cargo")
                        .HasMaxLength(60);

                    b.Property<string>("cedula")
                        .IsRequired()
                        .HasMaxLength(15);

                    b.Property<string>("email")
                        .HasMaxLength(150);

                    b.Property<string>("nombre1")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("nombre2")
                        .HasMaxLength(100);

                    b.Property<string>("nombre_comp")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<long>("sexo_6_id");

                    b.Property<string>("tlf_local")
                        .HasMaxLength(20);

                    b.Property<string>("tlf_movil")
                        .HasMaxLength(20);

                    b.HasKey("persona_id");

                    b.HasIndex("cedula")
                        .IsUnique();

                    b.HasIndex("sexo_6_id");

                    b.ToTable("persona");
                });

            modelBuilder.Entity("Entidades.Modelo.Rol", b =>
                {
                    b.Property<int>("rol_id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("rol_id");

                    b.HasIndex("nombre")
                        .IsUnique();

                    b.ToTable("rol");
                });

            modelBuilder.Entity("Entidades.Modelo.Soporte", b =>
                {
                    b.Property<int>("soporte_id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("soporte_id");

                    b.HasIndex("nombre")
                        .IsUnique();

                    b.ToTable("soporte");
                });

            modelBuilder.Entity("Entidades.Modelo.Sucursal", b =>
                {
                    b.Property<int>("sucursal_id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("cia_id");

                    b.Property<int>("ciudad_id");

                    b.Property<int>("estado_id");

                    b.Property<int?>("municipio_id");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<int>("pais_id");

                    b.HasKey("sucursal_id");

                    b.HasIndex("ciudad_id");

                    b.HasIndex("estado_id");

                    b.HasIndex("municipio_id");

                    b.HasIndex("pais_id");

                    b.HasIndex("cia_id", "nombre")
                        .IsUnique();

                    b.ToTable("sucursal");
                });

            modelBuilder.Entity("Entidades.Modelo.Usuario", b =>
                {
                    b.Property<int>("usuario_id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("activo");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.Property<DateTime>("f_login");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<int>("pais_id");

                    b.Property<byte[]>("password_hash")
                        .IsRequired();

                    b.Property<byte[]>("password_salt")
                        .IsRequired();

                    b.Property<bool>("programador");

                    b.Property<int>("rol_id");

                    b.Property<int>("soporte_id");

                    b.Property<string>("tlf_movil")
                        .HasMaxLength(20);

                    b.Property<string>("tlf_oficina")
                        .HasMaxLength(20);

                    b.Property<string>("token")
                        .HasMaxLength(1024);

                    b.HasKey("usuario_id");

                    b.HasIndex("email")
                        .IsUnique();

                    b.HasIndex("pais_id");

                    b.HasIndex("rol_id");

                    b.HasIndex("soporte_id");

                    b.ToTable("usuario");
                });

            modelBuilder.Entity("Entidades.Modelo.Cia", b =>
                {
                    b.HasOne("Entidades.Modelo.Ciudad", "ciudad")
                        .WithMany("cias")
                        .HasForeignKey("ciudad_id")
                        .HasConstraintName("fk_cia_ciudad")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Entidades.Modelo.Estado", "estado")
                        .WithMany("cias")
                        .HasForeignKey("estado_id")
                        .HasConstraintName("fk_cia_estado")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Entidades.Modelo.GrupoCia", "grupoCia")
                        .WithMany("cias")
                        .HasForeignKey("grupo_cia_id")
                        .HasConstraintName("fk_cia_grupoCia")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Entidades.Modelo.DominioDet", "marca87")
                        .WithMany("ciasMarca")
                        .HasForeignKey("marca_87_id")
                        .HasConstraintName("fk_cia_dd_marca87")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Entidades.Modelo.Pais", "pais")
                        .WithMany("cias")
                        .HasForeignKey("pais_id")
                        .HasConstraintName("fk_cia_pais")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Entidades.Modelo.Soporte", "soporte")
                        .WithMany("cias")
                        .HasForeignKey("soporte_id")
                        .HasConstraintName("fk_cia_soporte")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Entidades.Modelo.DominioDet", "tipo166")
                        .WithMany("ciasTipo")
                        .HasForeignKey("tipo_166_id")
                        .HasConstraintName("fk_cia_dd_166")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Entidades.Modelo.Ciudad", b =>
                {
                    b.HasOne("Entidades.Modelo.Estado", "estado")
                        .WithMany("ciudades")
                        .HasForeignKey("estado_id")
                        .HasConstraintName("fk_ciudad_estado")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Entidades.Modelo.DominioDet", b =>
                {
                    b.HasOne("Entidades.Modelo.Dominio", "dominio")
                        .WithMany("dominiosDet")
                        .HasForeignKey("dominio_id")
                        .HasConstraintName("fk_dominiodet_dominio")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Entidades.Modelo.Pais", "pais")
                        .WithMany("dominiosDet")
                        .HasForeignKey("pais_id")
                        .HasConstraintName("fk_dominiodet_pais")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Entidades.Modelo.Estado", b =>
                {
                    b.HasOne("Entidades.Modelo.Pais", "pais")
                        .WithMany("estados")
                        .HasForeignKey("pais_id")
                        .HasConstraintName("fk_estado_pais")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Entidades.Modelo.HdArchivo", b =>
                {
                    b.HasOne("Entidades.Modelo.HdDoc", "hdDoc")
                        .WithMany("hdArchivos")
                        .HasForeignKey("hd_doc_id")
                        .HasConstraintName("fk_hdarchivo_hddoc")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Entidades.Modelo.Usuario", "usuario")
                        .WithMany("hdArchivos")
                        .HasForeignKey("usuario_id")
                        .HasConstraintName("fk_hdarchivo_usuario")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Entidades.Modelo.HdDoc", b =>
                {
                    b.HasOne("Entidades.Modelo.DominioDet", "aplicacion178")
                        .WithMany("hdAplicaciones178")
                        .HasForeignKey("aplicacion_178_id")
                        .HasConstraintName("fk_hddoc_dd_aplicacion178")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Entidades.Modelo.Cia", "cia")
                        .WithMany("hdDocs")
                        .HasForeignKey("cia_id")
                        .HasConstraintName("fk_hddoc_cia")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Entidades.Modelo.Usuario", "consultor")
                        .WithMany("hdConsultores")
                        .HasForeignKey("consultor_id")
                        .HasConstraintName("fk_hddoc_consultor")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Entidades.Modelo.DominioDet", "modulo214")
                        .WithMany("hdModulo214")
                        .HasForeignKey("modulo_214_id")
                        .HasConstraintName("fk_hddoc_dd_modulo214")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Entidades.Modelo.DominioDet", "motivo298")
                        .WithMany("hdMotivos298")
                        .HasForeignKey("motivo_298_id")
                        .HasConstraintName("fk_hddoc_dd_motivo298")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Entidades.Modelo.Pais", "pais")
                        .WithMany("hdDocs")
                        .HasForeignKey("pais_id")
                        .HasConstraintName("fk_hddoc_pais")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Entidades.Modelo.Persona", "persona")
                        .WithMany("hdDocs")
                        .HasForeignKey("programador_id")
                        .HasConstraintName("fk_hddoc_persona")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Entidades.Modelo.Usuario", "programador")
                        .WithMany("hdProgramadores")
                        .HasForeignKey("programador_id")
                        .HasConstraintName("fk_hddoc_programador")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Entidades.Modelo.DominioDet", "status175")
                        .WithMany("hdStatus175")
                        .HasForeignKey("status_175_id")
                        .HasConstraintName("fk_hddoc_dd_status175")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Entidades.Modelo.DominioDet", "tipo172")
                        .WithMany("hdTipo172")
                        .HasForeignKey("tipo_172_id")
                        .HasConstraintName("fk_hddoc_dd_tipo172")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Entidades.Modelo.DominioDet", "urgencia170")
                        .WithMany("hdUrgencias170")
                        .HasForeignKey("urgencia_170_id")
                        .HasConstraintName("fk_hddoc_dd_consultor")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Entidades.Modelo.HdSeguimiento", b =>
                {
                    b.HasOne("Entidades.Modelo.HdDoc", "hdDoc")
                        .WithMany("hdSeguimientos")
                        .HasForeignKey("hd_doc_id")
                        .HasConstraintName("fk_hdseguimiento_hddoc")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Entidades.Modelo.DominioDet", "status175")
                        .WithMany("hdSeguimientos")
                        .HasForeignKey("status_175_id")
                        .HasConstraintName("fk_hdseguimiento_dd_status175")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Entidades.Modelo.Usuario", "usuario")
                        .WithMany("hdSeguimientos")
                        .HasForeignKey("usuario_id")
                        .HasConstraintName("fk_hdseguimiento_usuario")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Entidades.Modelo.Municipio", b =>
                {
                    b.HasOne("Entidades.Modelo.Estado", "estado")
                        .WithMany("municipios")
                        .HasForeignKey("estado_id")
                        .HasConstraintName("fk_municipio_estado")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Entidades.Modelo.Persona", b =>
                {
                    b.HasOne("Entidades.Modelo.DominioDet", "sexo6")
                        .WithMany("personasSexo")
                        .HasForeignKey("sexo_6_id")
                        .HasConstraintName("fk_persona_dd_sexo6")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Entidades.Modelo.Sucursal", b =>
                {
                    b.HasOne("Entidades.Modelo.Cia", "cia")
                        .WithMany("sucursales")
                        .HasForeignKey("cia_id")
                        .HasConstraintName("fk_sucursal_cia")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Entidades.Modelo.Ciudad", "ciudad")
                        .WithMany("sucursales")
                        .HasForeignKey("ciudad_id")
                        .HasConstraintName("fk_sucursal_ciudad")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Entidades.Modelo.Estado", "estado")
                        .WithMany("sucursales")
                        .HasForeignKey("estado_id")
                        .HasConstraintName("fk_sucursal_estado")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Entidades.Modelo.Municipio", "municipio")
                        .WithMany("sucursales")
                        .HasForeignKey("municipio_id")
                        .HasConstraintName("fk_sucursal_municipio")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Entidades.Modelo.Pais", "pais")
                        .WithMany("sucursales")
                        .HasForeignKey("pais_id")
                        .HasConstraintName("fk_sucursal_pais")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Entidades.Modelo.Usuario", b =>
                {
                    b.HasOne("Entidades.Modelo.Pais", "pais")
                        .WithMany("usuarios")
                        .HasForeignKey("pais_id")
                        .HasConstraintName("fk_usuario_pais")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Entidades.Modelo.Rol", "rol")
                        .WithMany("usuarios")
                        .HasForeignKey("rol_id")
                        .HasConstraintName("fk_usuario_rol")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Entidades.Modelo.Soporte", "soporte")
                        .WithMany("usuarios")
                        .HasForeignKey("soporte_id")
                        .HasConstraintName("fk_usuario_soporte")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
